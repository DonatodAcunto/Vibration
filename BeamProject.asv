clc;
clear all;
close all;

%% Mechanical Vibration Project
%% ======= LATERAL VIBRATIONS OF A BEAM =======
% Data:
% Young Modulus E
E = 206;    % GPa
% Mass Density
rho = 7850;   % kg/m^3
% Area of the beam cross-section
A = 111;    % mm^2
% Moment of inertia of the beam cross-section
J = 6370;    % mm^4 (da verificare, secondo me bisogna trovare la I dividendo ulteriormente per l'area
% Length of the beam 
L = 0.7;     % m
% Damping ratio values 
csi_1 = 0.05;
csi_2 = 0.01;
csi_3 = 0.01;
csi_4 = 0.01;
% Sound velocity in the Material
%c = rad((E*J)/(rho*A));
%IC
%w(0,t)=0,w(l,t)=0
%EI * d²w(0,t)=0,EI * d²w(l,t)=0
% Ci ho provato 
beta = @(omega) rad(omega/c);
alpha =  @(omega) -(cos(beta*L)- cosh(beta*L))/(sin(beta*L)-sinh(beta*L));

C2 = @(C1) alpha * C1;
w = @(x) C1*(cos(beta*x) - cosh(beta*x)) + C2 * (sin(beta * x) - sinh(beta*x));
q = @(t, omega_n) A*cos(omega_n*t) + B*sin(omega_n*t);

%% Trovate le costanti c1n e c2n per i 4 modi si può procedere a trovare W(x,t) 
% e di conseguenza trovare le frequenze naturali per i primi 4 modi e
% quindi plottare

%% Matrix form

% Defining the elements and nodes 
% --------------------------------------------------------------------------
% where we use 4 elements
N_elem=4; % elements
node=zeros(N_elem+1,2); % start and end point of the beam
for i=1:N_elem+1
   node(i,1)=i;
   node(i,2)=L/N_elem*(i-1);
end
 NUM_NODE=length(node);   % the size of nodes
 NUM_ELEM=length(node)-1; % the size of elements
 matrix_size=2*NUM_ELEM+2;
%
% --------------------------------------------------------------------------
% Initializes K and F matrice
% --------------------------------------------------------------------------
%
 M=zeros(matrix_size,matrix_size);
 K=zeros(matrix_size,matrix_size);
%


% --------------------------------------------------------------------------
% Assembling of K and M matrices
% --------------------------------------------------------------------------
%
k_elemu=zero(4,4);
% (1). assembly of K matrix
 ELNO=0; % ELNO:the ith element
 for ii=1:2:matrix_size-3  
    ELNO=ELNO+1;
    [KE]=k_elemu(node(ELNO,2),node(ELNO+1,2),rho,E,J);
   %[K]=mtxasmby(K,KE,ii);  % matrix assembly by calling "mtxasmby.m"
K((ELNO*2-1):(ELNO+1)*2,(ELNO*2-1):(ELNO+1)*2)=K((ELNO*2-1):(ELNO+1)*2,(ELNO*2-1):(ELNO+1)*2)+KE;
 end % end of FOR loop -- assembly of K matrix
%
% (2). assembly of M matrix
 ELNO=0; % ELNO:the ith element
 for ii=1:2:matrix_size-3  
    ELNO=ELNO+1;
    [ME]=m_elemu(node(ELNO,2),node(ELNO+1,2),L,rho,A);
   %[M]=mtxasmby(M,ME,ii);  % matrix assembly by call mtxasmby.m
M((ELNO*2-1):(ELNO+1)*2,(ELNO*2-1):(ELNO+1)*2)=M((ELNO*2-1):(ELNO+1)*2,(ELNO*2-1):(ELNO+1)*2)+ME;
 end % end of FOR loop -- assembly of M matrix
%

